<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Cleaned_DelayedFlights)' inline='true' name='federated.0doksl30zb1cbr14lb8en0cy61cw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_DelayedFlights' name='excel-direct.1r8aadz0vhc9s414uvad706jr72z'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Andri/Flight Delay/Cleaned_DelayedFlights.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1r8aadz0vhc9s414uvad706jr72z' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1r8aadz0vhc9s414uvad706jr72z' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carrier Delay Precentage' datatype='real' name='[Calculation_431219722771218432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_650E687C87EE43EA885C743F847452AA]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Lenovo/AppData/Local/Temp/TableauTemp/#TableauTemp_0g2e2yn0akmvb51c7nfbz08p0u2t.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/05/2024 02:04:52 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>924</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>855</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport_name</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>915</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[arr_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_delay</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13217</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[carrier_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_delay</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6450</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weather_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather_delay</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2512</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nas_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_delay</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3536</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[security_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_delay</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>483</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[late_aircraft_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_delay</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6922</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_650E687C87EE43EA885C743F847452AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Collins/Loveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Youngstown/Warren&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_431219722771218432' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_650E687C87EE43EA885C743F847452AA'>
            <properties context=''>
              <relation connection='excel-direct.1r8aadz0vhc9s414uvad706jr72z' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' name='Date' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='airport_name' ordinal='8' />
                  <column datatype='integer' name='arr_delay' ordinal='9' />
                  <column datatype='integer' name='carrier_delay' ordinal='10' />
                  <column datatype='integer' name='weather_delay' ordinal='11' />
                  <column datatype='integer' name='nas_delay' ordinal='12' />
                  <column datatype='integer' name='security_delay' ordinal='13' />
                  <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0doksl30zb1cbr14lb8en0cy61cw'>
      <datasources>
        <datasource caption='Sheet1 (Cleaned_DelayedFlights)' name='federated.0doksl30zb1cbr14lb8en0cy61cw' />
      </datasources>
      <datasource-dependencies datasource='federated.0doksl30zb1cbr14lb8en0cy61cw'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]' included-values='in-range'>
        <min>#2017-01-01 00:00:00#</min>
        <max>#2022-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_1595517C289C4851B55E78BCA299BB60]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_3D3009A78F9A40B38BC39004FD2120E0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_3A1101E5A3F9442B90B8F1AC6DC11AF4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier Delay Precentage' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Carrier&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Cleaned_DelayedFlights)' name='federated.0doksl30zb1cbr14lb8en0cy61cw' />
          </datasources>
          <datasource-dependencies datasource='federated.0doksl30zb1cbr14lb8en0cy61cw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1595517C289C4851B55E78BCA299BB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (City,State)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:carrier:nk]' />
              <tooltip column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[attr:carrier_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:arr_delay:qk]</rows>
        <cols>[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{4A37C778-D6AA-4942-8ABE-B8DA4D0F6B64}' />
    </worksheet>
    <worksheet name='Carrier Delay Precentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Cleaned_DelayedFlights)' name='federated.0doksl30zb1cbr14lb8en0cy61cw' />
          </datasources>
          <datasource-dependencies datasource='federated.0doksl30zb1cbr14lb8en0cy61cw'>
            <column caption='Carrier Delay Precentage' datatype='real' name='[Calculation_431219722771218432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_431219722771218432]' derivation='Avg' name='[avg:Calculation_431219722771218432:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_3D3009A78F9A40B38BC39004FD2120E0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1595517C289C4851B55E78BCA299BB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (City,State)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (Carrier)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[avg:Calculation_431219722771218432:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[avg:Calculation_431219722771218432:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0doksl30zb1cbr14lb8en0cy61cw].[avg:Calculation_431219722771218432:qk]</rows>
        <cols>[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{54632411-3BD0-4D24-8C2C-23CF47578DDB}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Cleaned_DelayedFlights)' name='federated.0doksl30zb1cbr14lb8en0cy61cw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0doksl30zb1cbr14lb8en0cy61cw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_3D3009A78F9A40B38BC39004FD2120E0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Latitude (generated)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Longitude (generated)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (Carrier)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Longitude (generated)]' field-type='quantitative' max='-7446627.7106768582' min='-14179573.085796617' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Latitude (generated)]' field-type='quantitative' max='7346479.8500619149' min='2537233.0388864228' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:nas_delay:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:state:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:state:nk]' />
              <color column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:nas_delay:qk]' />
              <geometry column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]' />
              <size column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:arr_delay:qk]' />
              <lod column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]' />
              <tooltip column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[attr:airport_name:nk]' />
              <lod column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.3685784339904785' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Latitude (generated)]</rows>
        <cols>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CE8D0604-380C-45F6-8B57-3689BCB6BAA2}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Cleaned_DelayedFlights)' name='federated.0doksl30zb1cbr14lb8en0cy61cw' />
          </datasources>
          <datasource-dependencies datasource='federated.0doksl30zb1cbr14lb8en0cy61cw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_3D3009A78F9A40B38BC39004FD2120E0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1595517C289C4851B55E78BCA299BB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[:Measure Names]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (City,State)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[Action (Carrier)]</column>
            <column>[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='20' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doksl30zb1cbr14lb8en0cy61cw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0doksl30zb1cbr14lb8en0cy61cw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8B9C8035-8CDF-4256-A34B-C6590CA97B38}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='US Flight Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (Cleaned_DelayedFlights)' name='federated.0doksl30zb1cbr14lb8en0cy61cw' />
      </datasources>
      <datasource-dependencies datasource='federated.0doksl30zb1cbr14lb8en0cy61cw'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='22' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone fixed-size='36' h='5493' id='23' is-fixed='true' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92509' id='20' type-v2='layout-basic' w='99034' x='483' y='6492'>
              <zone h='88736' id='17' param='horz' type-v2='layout-flow' w='99034' x='483' y='6492'>
                <zone h='88736' id='15' type-v2='layout-basic' w='99034' x='483' y='6492'>
                  <zone h='80430' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='14798'>
                    <zone h='80430' id='5' type-v2='layout-basic' w='99034' x='483' y='14798'>
                      <zone h='80430' id='3' name='Map' w='49518' x='49999' y='14798'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='40213' id='11' name='Carrier' w='49516' x='483' y='14798'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='40217' id='13' name='Carrier Delay Precentage' w='49516' x='483' y='55011'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='8306' id='14' name='Total Delay' show-title='false' w='99034' x='483' y='6492'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='3773' id='19' type-v2='layout-flow' w='99034' x='483' y='95228'>
                <zone h='3773' id='18' name='Carrier Delay Precentage' param='[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]' show-title='false' type-v2='filter' values='database' w='99034' x='483' y='95228'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='24' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='36' h='5493' id='23' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='58' h='8306' id='14' is-fixed='true' name='Total Delay' show-title='false' w='99034' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40213' id='11' is-fixed='true' name='Carrier' w='49516' x='483' y='14798'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='80430' id='3' is-fixed='true' name='Map' w='49518' x='49999' y='14798'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3773' id='18' name='Carrier Delay Precentage' param='[federated.0doksl30zb1cbr14lb8en0cy61cw].[tmn:Date:qk]' show-title='false' type-v2='filter' values='database' w='99034' x='483' y='95228'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40217' id='13' is-fixed='true' name='Carrier Delay Precentage' w='49516' x='483' y='55011'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ACAC50BB-EE9C-485D-BE77-298F9521A644}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:nas_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0doksl30zb1cbr14lb8en0cy61cw].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:airport_name:nk]</field>
            <field>[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{5FE62944-4D60-4545-BC30-1BCA8AFEBAB4}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:carrier:nk]</field>
            <field>[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6574C0E-A8BB-4C56-A2D9-4943307FA464}' />
    </window>
    <window class='worksheet' name='Carrier Delay Precentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0doksl30zb1cbr14lb8en0cy61cw].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8477950A-3EED-491B-B18E-1C1EE6C31690}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0doksl30zb1cbr14lb8en0cy61cw].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC67B7D3-382A-46FD-A54B-2510A76F4569}' />
    </window>
    <window class='dashboard' maximized='true' name='US Flight Delay'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delay Precentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0doksl30zb1cbr14lb8en0cy61cw].[none:city:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='23' />
      <simple-id uuid='{B2DC116B-BD67-4541-B484-8805F022DA3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVUElEQVR4nO3d23Mb53nH8e/u4kiABAiQ4JkiKZE62nKObRNnMrFjJ9O0nWknbTPpRS96
      1T8hV3Wn/0Fv6k5v2mk7nU4mSe3YnU5sJ43tJLZT60gdSPEIEjyfcCKOu28vQMkiRdraJUCJ
      3Oczw5FIcV8+WuIHLHaffV9NKaUQwqX0J12AEE+SBEC4mgRAnFiVYp57E5OUTWvffy/lM3iO
      uCYhjoaq8uYb/82Xvvo8hVyG63fu0DdyiWp+k1K5hM/ro7I2La8A4oSqFCgZIXq6ujDMAtl8
      njfffIufvfljLN3gjdffoFQuyyuAOKG8IVqNIu/96teEVJHNsk7Ab+D1d3Kmr5OrnX3EIy1o
      chpUnFRKKSzLQtd1LMtC03RAoWkaStX+bGgATNPEMIxGDS/Eocl7AOFqEgDhahIA4WoSAOFq
      EgDhahIA4WoSAOFqR3Il2LIsFkZnbW/Xdb4fwyvXEUTjHE0AqhYf/+d7trf79g/+FMMbbEBF
      QtTIIZBwNdsBqJby3LxxnbnFVRZmJ7h65SrZQp7f/PoKCrh3/dektsoNKFWI+rN9CLSYnKRQ
      1QhVquQLFS6dP83s8gJaMcd6bptCLgdlC9M0sSwLpRSmaToqzjRNqtWqo22FeBy2A2AYXvqH
      BlhLTaIB1UoZNJ1YVx/TN6/S0d5BCdB1HaVUrRnOctZvp+uGNNOJhrIdgM7+IcbHxonGuwgb
      FSaSq4ycGyKXLhMIKDraI+Q0T63VdOcDNEfFaRo72wvRGLYDoHv8nLv4zIPPo+1dAPjjfuLx
      5trf61ScEI0mZ4GEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISr2b4SnF1NcXMy
      RU/fAPnVJBUjwODpXt59+2N+/w9f4Pq7PyV8/mWGE4G6F1s2Laqmvb4ij67h80jOxf5sB0Dz
      egkGfORyOULhMJuZPIVSmb72MPNLq3gDLUCtk9M0zZ1uUGcdndWqifFQN+j1hTy3V4q2xhiO
      +/lyX9jRzxcnn/07wjQPg0OnmZyYINHbTTgUZCOdpSnWzfz4KEOnOsnCgy7OWjeow+I8Bh7P
      JyXquv1nck3Xd40hxMNsPzKaws3MJec4d+ESWjnHypbJmVO9lIpVOjpbCAV9RPA1olYh6s5+
      N6jh5dTgUO2TQCsDLa0ABIMGwWCtD1Tu4hXHhbw7FK4mARCuJgEQriYBEK4mARCuJgEQrua6
      K0SWZXHv7l3b250eGZELaieQ636jpmnyL//0j7a3+8Hf/h3NLS0NqEg8SbYPgaxqiamJcRZW
      NqgU8yTnF1GYrK6sA5DZWKFQdtj7IMQRsx2A9NoSFT1Ia6SZsfF7+Ckwu7DIlY+uU7YU06Mf
      MS9zg4pjwvYhUCgSx7u9zK07d2kO+Im3JZheStHXE2d6YhJfcwxoTDeoZdl/ZVGWtWt+Uadz
      jco8pSeT7QCUCnlyuRy67kOzyly/eZu+M0NkKiVWFsY5d6aHDe3p7QZ1ui64YRjyJvgEsv0b
      bY518Gys45GvJ1rhzHAPALHD1yXEkZDrAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC
      1SQAwtUcBSC9tkBycZ2luWlu3Bwls53j9u17AKSmbrOel54ZcTzYboWwqiXmV9fBDFDKrxBs
      7aQpoLGaTJE9M8jawixN4SFiTQZKqZ3eG2f9N0rt7t1x2MazZwyHgxxyW/F0sh2Auckxctsl
      Nte2eOnl5yluLXFvOkVnXzdTozcItyawYNcq8abprBvOssxdq8w7eQAqa/dK9ZblfNV6pyve
      i6eX7QCcOvssp6gwO7tCamqc9XSeU8NDFDMm1bVtOrraSet6XbpB93Zg6rr9RbM1XZNuUHEg
      h79RL6dO1To/++9/qRm6e+IAyFzM4riQs0DC1SQAwtUkAMLVJADC1SQAwtXkvJ5Di5kUK9ll
      W9vEQ230Rvs/+xvFkZEAOPS/997hp7d+bGubF0e+xV/97l83qCLhhBwCCVeTAAhXcxSA1Mxd
      7tybY256nCtXrpDezvLuux+hgLGP32VuU6ZGFMeD7fcA5fwWecuDVSqSN02ePX+GmeVFAlaZ
      1XSOUqmEXrFO/NSIlrJfi7WnFvHk2Q7A2uoK29kcS0t5unuilEpFNN1LtLOXmdErdHd0UODk
      T42oa/Zr0WXR7qeO7d9G98AI3VRZ78niMyrMLG4xMjJAPlMmFDJoj4fJy8klcUw4fKR6iLfV
      Fsi+2JoAINrqI9pa6wOVdeLFcSFngYSrSQCEq0kAhKvtG4B8Ps/CwsJR1yLEkds3AMvLy7z/
      /vtsbW0ddT1CHKlPPQv06quv8v3vf5/+fulgbARlKfJT9l9pmwY60T1GAypyn30DEA6HGRgY
      IBQKcfPmTQlAgyjTZOYfXrO93dm/+Uv0llADKnKffQOQSCRIJBJHXYsQR+7As0CFjXl+8vob
      /N+NO5SruyenqpTLmJaFZVYpl8s7PS617zHNKpbMoCaOiQMD4Au1Egt5uXPtt7z2k9fIVmpf
      L+W2mJic5Mr1W9y9eZ3JqWm2Sxn+581fYCrF9ffeZHK1dFT1C3EoB74JNisVuofOcfHyFwiH
      w9x/zxUINUNlGo+vmXDQz/pmhmw+Qn9nhPnUMr6maG176QZ9xN5uUMvhVItm1USTrtK6ODAA
      1ew8P/2vd4hGW3n5T75Hb6D29e18jrbufmZm5/DHEiR0jXyhQDDayfzkLYYHukkj3aD72dsN
      ajk8UjQ8Mk1jvRy4F73BCM9/7WuM3b6N96E5Of2BIOnsGhcuXMRQJbZyfobaY1TKJt29MYJ+
      DxG8R1K8EIe1bwAq+S1+9MY7FKu1Z8yHp6Q1vH66unt2PvPR2dQMgN+v4/fXHvj+RlYsRB3t
      +zruDUX5sz//LpFwE1//+osEfPZnZRbiODj4NOjKBLmqwcSdG6zl5A2XOJkOfA/Q1P0s5/s2
      MUMdDMbkoEacTPu+AiizxOs/+iGr2RLTY2MUTbmwJU6mfQNQ2Fxko1BFAzzFZZLrMs2JOJn2
      PQQKtPbynZdf3DlP/RyxuNzlK06mfQOgGx6iQZ2VcpDetuajrkmII3PgWSBllvjhv/8rb739
      NlvbsjqiOJkODIBVLXHpS8/z3OXLhPyffFshu8GNGzeYnE2xujDLtWs3KFSKXLt6GwXM3r3K
      yv3OOSGecgeeBtU8Tdz64HVWk9289AffpT1c+9ZgOEp3Z5mF1S1KusWFkX6SqXlya6ukC2XS
      a8uUY+dpC9UWyq6tF+x0nWC1qwHOUR+P2j2Gk4a6+z97Vy0OFv9+ZAyHfUlqz34Rzh0YAH+k
      g+986wVG795j73Vgy7IwLROvru38myLR08P06DWi8QT3L5vdXyne+e0Bqi6rs9drjF3jPMFV
      61Wd9os4IAClzDJ//+o/88ylC3SPXCYe+uT+0+zmGksra4TCrUT9JqPjs5y9MEJ2swhamY7u
      OFnNQNd1lFIYhoFyeB1Bf2jBbQBNc9CSoWm7xnD6zFmPWrRHaqnPfhHO7RsAX3M7f/G973Lz
      xg3Grv+W4aEhYqHatzbHEjwb++R2ycROX1xTR5COjtp0iU0NLlqIetk3AJqm091/mu7+0yhl
      oR45CBLiZPjMuyo0TZeHvzixZGpE4WoSAOFqEgDhahIA4WoSAOFqMrfGSaCs2octGuhyMU0C
      cBJMvQPJ9+xt0/1FOPtHjannGLEdgFI+zfjkLKFoOwGVZy1TZOD0ADP35nn28jmS49cJdl2g
      vVnmBhJPP9sB8AZCnDs/wp27k2SKWbzNMQI+SC8vkS4OsbmySCl6lraw56FuUGc9L9Yj3ZMO
      Btk7Rp26QZ10w9WtG3TPOJqDa/VKKcf74iSxHQCzXOD2vVlGzp0n4NUppFeYnE2R6O1havQ6
      kXgCk4c7QZ13Lu7d1sk4ijp1YD5Si6NhGlILCkdX66Wj1EEA0hurVEyThcUlvGaOjfQ2AyNn
      KGaroEp0drWR0evTDWrs6XrU9Xp0YJ7AbtA61OJWtgPQ1jNEW88nnz9YOyYEnZ3SDSqOF7kO
      IFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXM32leBidoOx6Xk0T5AWX5X1dJ6h
      s8Nc/fAW33jxK9z56B1CZ57nlKwqI44B2wHwh1sZ6q2QXNumWK1y+eJZZpYWafEqljbTVE0o
      V5UslL2PRi2UrVuW7Zdyy7KwZLFt+wHY3lphfqPEheEBbo3epLCdQzd8RBK9zN66Rl9Xgm1k
      oez9NGyhbAf7Rdd1dFls20E7tKUob6eZShoMneolubTJmTP9bGcrtER8xKIhtmWhbHFM2A5A
      S7yTy/HOB5+fa4nVvh7x0hKp9YFG6lScEI0mZ4GEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCE
      q0kAhKs5CkC5VEIpRaVUJJ1OU6maFArFnX8rUHU4D5AQR812AMrbGX758/coARNjd9jcSlMx
      8/z8Z+9jKsWtD95ier3UgFKFqD/brRC+phYG+roAaIk0s7y2jCfoob87ymwyha+pNjmWdIM+
      SrpBnz62A1Au5FlbX8e/toHH8BAJhyhXKgQinSxOjzEy1M0W0g26H+kGffrY3gO6YTBy6SKG
      x0eopYN8c5VIS4hq1aK/vw2v1yAqyw6IY8L2I9XjCxCPBx58Ht258cvr1cFbG05OLR0/lmVx
      94Nf2N5u+IvP4/Ud37v/5KlaAKAskw9e+zfb2w1c+sKxDoA8WQtXk1cAUVfF0VFKd8dsbeMb
      HCT4hc83qKJPJwEQdVW8eYvMa6/Z2ib0wjeeWADkEEi4mgRAuJocAomnjqUsXpv5D9vbfbvv
      jwl6Hlqga3UF1tc+dRsJgHjqKBRTWXtvpAGqak9rR3IWrl/71G1sHwIpZbGYSmEqRSG7ydi9
      aUyryuxsCoC1xVkyRWc9LkIcNdsBqBTzTN6boQJMzMzRFfMzu5Bi4tY4BdMiNTHKcqbSgFKF
      qD/73aDBZjraogB4vV6aQi1Y2RTdvQmm79wlGGkDpBt0P09zN6hZdVZLtVo99H5RSu0aw1RO
      90uVqmZvv9ifGzSzztzCAqVgmJChuD56l8GzZ8hSYnVpkuHBLjYNTbpB9/E0d4NqOCvG4/Ec
      er9omrZrDE05WfcejD21PM5+sR2AppY4L7z80oPPB3f+jDXDqYEOQKZGFMeHXAcQriYBEK4m
      ARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCudqgAzE+Nc+PmKJntLFc+HkUBM7c/Zkma4cQx
      caj7ATa3ttD8zXg9UNhYZ2u7RGZzjUqbSSJsPGhec9LEdn8786GGMUd9PErtGsOynDVa1aMW
      tacWVaf9oill+5lMKbWrGe/J/o7Y/Tty0FAHtf1pd78cKgCXPvclStk1ppMp2nt6mR69Riye
      4P7zv6ZpOx9Of0Jt+8PaPYaz8e7/Xw45zJ4xHNayZ7843UP12C+PjONkGG1vLc7Z3S+HCsDc
      9Dgb6QJD54cpZiroRoWOrhhZzUDXdZRS6LqO5aBDEEDXtV0doI52krZ7DCcdpfd/9q5aHPym
      945hac6e6bQ9+8VJkDRNQ3toDKU7ewDqun7o/XJ/nAe1OOzY1fbU8jj75VAB6B86S//O31sC
      kEjU7hMIHmZQIY6QnAUSriYBEK4mARCuJgEQriYBEK52qABY1QrZXB6FRWF7Z5XI4rasEimO
      jUMFYOzuLRaSUyysrvDzt35VWyXyw7dllUhxbBwqALrHz+mhQbbzaU7dXyUy1Fqv2oRouEMe
      ApWYnJ6mKRTBH+lgcXqMRKKtXrUJ0XCHuhJ89txFcoUyzc1BzKii/1Q7Xo9BFKNe9QnRUIcK
      gO7x0tLsrQ3kBc/OA1+n1t13v8NQoej/8rCDH6A9mF5R0zRiQYPhuM/WEIkmY9cYSim+/JWv
      2i7FMHaPczo+zDeHv21rjJH284/UEvm9C7ZrUYa+axzC3dD5RXuDNPfDQ2NYSnH2d75huxZt
      z37xnB4i+NI3bY3hHRneNYalLJ6N2vz/AIbaXQvxNjh77tPrV047jx6DaZoPpkh80uNILVLL
      fhp6HcBp52UjxpFaGjdGvcZ5ErUYr7zyyit1+an72K99eTu9ylq2SmriBlpzB0vzM8xNjeFt
      aWdhboZYLPZY4wBYlTy//M1VTvX1YJW2ePejuwz0dT12LQCZ9SVu3Z1geW2TeLSJq1dvkFpY
      pK2zC88+LcIHjbOWmuLG+AxbmW38lRxZPUjIt/+z0IG1LCXJaEGyq/PgCzM/dp20ChAN799f
      e9A48/fuMLmwxPpWDkoZJmbmCbVE8XsfrefAfVvOMZFcRRW3WFtfp4CXxbkksVjrvtscNM7o
      lQ8wwm0szs9QLm1jeAymkwvEY9HHHgMqfPSrD9nMF8ilNwm3xkhOT9ISaUV/3FqUYvzOTeZS
      C1Q0P6vLC7SEfEd/JTjQFGJrcxPN4yOzmqRU0Qk2t7A0N0uxWLA11vryMl2tTazkq6TmV+iN
      +9ks2LvjK7W4yjPPXSYW1Ji8O86pS5/nc2c7mJzbsjVO1TQ5PXKBVk+RzVyRioOLgdVyiYqp
      KJeKmKZJSfezvbGC3YPUcqmEZVkoSzE1PY2mqhRL9qaF131hKKyxmK7Qd2qA5OhHBKMJ2/dk
      +MMtLM8nKRQLlHJbfPjba/T29X/2hrsoSqUyuq7RGQ8wm9qgUKzs++A/cARVpay8PPfcc2wt
      p1hfTjE6euvoA6B7g1i5ObzRfrYW5ogk2tF0L20hndWsnQtoilRqkWK1wvzUNMsry+RyOebn
      FmzV49UV28UK28UikUgT6a0s6c0MTeGAvf/YTk3ZQoUDnvg/uxafh+J2kXK5QiW3zOJKhoWF
      Jao2E+D1h7n4zCUqxSzBUISR4SHW1lZs19Pb1UYgFMOqbOMJRshubdqeRF3TvbSHDVYzRTRf
      kMHedtY307Zr6eob5MLZYYLRbjLzowQibTbvA9Ipl4tUy0VMDJoicS5ePNfYQ6D9aWDqxDsT
      GIZBezyOz+shnujEqpRpbX28C2lKKXxNLQwODhEwTFoTPQwNDuLVLYLBx78lJ9IaJTk1QTje
      TXdPL7mVJDnCDHXHbD3b6ShmZmfp6Bsi2hwgOTON4QsRCj7+WStfqIWtxRm0YCvNwSBDZ0fo
      T0Qo6358xuPXYlULTM8kSXT305toZSq5yODgEF7D3vOdphv4fH4qhQJdA0N4qNAUbLK1XwzD
      INbeiapUiLfFibV3US3maQqFbN07trKQZGkjQzwWR9c1Eh2deGzsE03TCHo1ppJLnDk7QtDv
      oynYxP8Dtu3uLO8aZrQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay Precentage' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='70' name='Total Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Flight Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3hd13Xg+zvn9g7cht4IkCgkwSKxiKJEVUtWi2zJsi3bkZVk4niSvEwm
      mfdm5r3M+Dkzb15mkjhxie1ItuUi2ZZoq4uSSLE3EGAvaETvwAXuvbi9nLPnD1AgIeKyWCJF
      iuf3ffg+8p519l5nn73ObmuvLQkhBBoaNyjyx62AhsbHiWYAGjc0mgFo3NBoBqBxQ6P/uBXQ
      0PgoObD9XWpv/RQuA4SH2mgLW2kstfLrl14mnVVxFFTyxUfvAyA22acZgMYni+DEOBl15t+Z
      RIRgBJp27ObWB59kYaGNRCIxK6uk41oXSOOTz/JV63jj+R/w0+dfIp5W51zTDEDjE4aKemZp
      S1UVJEkir7CSv/yrf89Dd6/hZz/6MalzbEAzAI1PFJWVxWx9bw+ZdJIt25upqSimp+Mkg6NT
      2F1urCY95678StpKsMYnCSEER/bv4HBbDyvXbmB5/QIiwXG2bt1GKK5wxz33UVHkASAVDWgG
      oHFjo3WBNG5oNAPQuKHRDEDjhuaqG4CSjvJ3f/tNxiNpFEWZ/RNKkm///f/k+8/+jERGIZvN
      MtxxkJb2IbLZLKqqzvwp6sUzuVYRgq1vbuSZ53+DqqpkFQVVUVFUFUVRGO1upWNggmw2ixAz
      vwkhePHnz/Cd73yXgYlpFCVLJjHN21u2oijZmXvPlM21PJh7/Y3XAYFy5l02HTgwUwbZLEII
      EFn+13/9TwxNJ9i9ex+KosxeVxRltowURWX3u6+yfcdOWk52IwT88sff5Tvf+R6joQTZbJZU
      eIh3dhyazWvmT5lXr6u+Ejxy+hgur4+mAy3sf+9VKouLSVqK+ZOnHsDqKaPWDS+88AsGurtp
      XFqLwZPi19/+f1m89g70Bj16o5MvfPb+q632R4JQs5wamOTP/uRr7Hv3t/zwl++xbsUiXAtq
      Obl3Czc1LiWKlefbTrC0rpa9J/r4j//h3xFKy3zlMxv4+Yu/IjA2TG3jcrLpON//X98kZCih
      0G3CrDfw5Fe+hPRxP2QOxsbGECLF3/3Nf8ZaupjO1kOM9rZz6GQX93/+D6mzBnAWlrOn6SSR
      /uNsf/dl6huWcnpkmgKziihchHHsOEdGwJYYYGFDHU2bdtPw3/4zcWHk8/c18ouf/YTw1BjL
      li8nmrbyP7/xH7CUL8Np1GMw6PnKl75wnl5XvQU4cuQkiiTReeoYixpXU7eglPseuA8DEn3t
      R9jbPkpVgZOR8QlkIDjcg9VfitFZSKjnOI2rVl9tlT8yJFmHx6DwzPO/oa2rlzK/C1Xv5NP3
      3UFVw0qWLixDliSGh0fR6SRWb7gHv8tCZnqMn/zqLZYtq2NsdBhJ1qFmEgSTKiZZR4UTrMUL
      r+n+7EjPKd556x3i5jx0OiP1lUUISWZkdAxZqBxoPkpGb6Sv/QiyLFNY1cCaZbUIVUHWmXjg
      /nsYGJ/CYdGzsG45j37293AYZ8w9NjnEz1/ZzorFCxkeGkWnl1DiE8TIQ6fT4yBIac2yefW6
      bqZBU7EpNr62lc9//nH01/KbvuoovPzCr7jtkcfx2k0ftzLXHELJ8KsXfskjn/8yNuP5Fee6
      MQANjSuB9i3VuKHRDEDjhuayZ4EO79vGgWMdgMBdXMPjD93DUNdxXt+8G1mC8rqV3H/HGrLJ
      CC/+8tdEMyq+0ho++8Bds2kIIRjsbuVXGzfx9b/6K+x6iIXG+e3Lr5FIK8gWF1/+4hOYDTII
      wXuv/4r+pIunn3hgji7DPa289vZ2JFlm9e33U2SO8drm3QAo6QRGbzVffexu3njlZUanImRV
      eOwLX6Yw3/bhSm32OVROHtzLluYu/uLrTyEBh/a+R/PxLkDFU7KQxx66i71b3uBE9wioCmW1
      K3ngzjUfTImjezaz+dgof/3130dJx/jnb30Le74fJB2/98STJEfbeXt7EwBGm5snv/A4Jr00
      e/+J5l3saD6J3mjjyS9/EYfZwFD3KV5/ZweSLLNmw6dZXldOb9sRNm3bhyzL3PapR2ioKvpI
      ykJVMuzc/AZDMStfeuy+s79n4nz77/+O2x77OjctKmTLay/SORJEJ0lU1a/g3ttWzSnPd197
      id7REMLg4I/+4El0qsrxlt1sP9zH//G1rwAzA+pXNu1AliVKFjby4N3rZme/lEyCjb/8JaF4
      GldRFU888ilkSZopo6atvNncy//1Z384W26IyyQSjQohhFBVVbzww38S43FVfO+f/1EkM6pQ
      VVX8+LvfEsGUKjb+/FnRNx6elT2X+NSweOPd7eL5Z38oQumZ34Z6u0QwmhBCCHFsx6ti+9He
      md87DovfvP6WeOYnv5qThpKKin/5/jMilVXmzWPXppdES/uQiE6Nid6hCSGEELHRTvHsi5su
      95FzMtB5XOxoOiqe/eGz4v3cI9HIrD4/++4/i6mMKqKR98tMEd/55++IzAfSiU4OiR/94iXx
      7DPPzqQx2iZ++erOOTKxaEQo6ky6u1//lWjpHJ29lo5PiW9/71mhqEKM9xwTz730tsgmI+Jf
      vv+MSGfVWX3SsUnxL//6nMgoZ3/7qDjStFOcOH1KPPvDs+9JVVXx1safi7dfe0lsPTTzPn/y
      o2dEVpk/32O73hSbD7QJ9cy9qhCiv+Oo2NV8TDz7wx+9n6r4l2//o0hkFKGqqvjpd78lJlNn
      09j5xgvicPfM+97/zkti1/E+IYQQseCIePZnL4pnnv3hrGx4rFdcdgtgs5h46RfP0to1xK2f
      ehSfReLBezfwrX/4X1iNOkrqVpGnS3GyvZvpzG9IJuKULlrOQ3ffinTGTC35RTx4bxEbf9o5
      m25xxQKEEPR3HmP7iXH+4I9KiU0N825zN0997l5+9Pxbc/QY7T7O0ESIXzz3Y2LxJPc8/Bj1
      lTNfs2R4lJOjCn98fzESYMuH6ckRnn/pLR743FOX+8g5Ka1ZQinQeaT5bPlYbbz4sx/Q1jPK
      bfd/lny9hGqR+OkPvk/v2Dif/uyX5zS7SibOC795h6/+4VP87Mc/ASAcijLYdYQf/OAEFlcB
      X3ziM1htdt578yUOHG6jqvEWnqgumE1jaqCD8iWrkSXwVdaT2dzCWPcxBgNhfv7cj4jFk9z7
      8OPoA8cYD07z0x//iHgyxYOf/QILij0fSVksW30bEGH/e8dmfzuy+22cNbdQkOlh4MxvIh3h
      R8/8K+lslrsf+Cz157RAuw8dx+4a55lD25Atbp768ucoW9hIGYL2Q++XscTD99/FP/3D32Mz
      6fHXrMBtPKuHw2Gn63QXdUU2HD4few8d5ZZaH7/c+BZfefppfv7cMwAzPZTXd1x+F0iS9Tz+
      pT8gMDrExo2/pXFJLbv3H+TJr/4RBQ49L/ziBaYSN+Mvq+GrTz+NJAS//PG/MBpZTZHTkDNd
      IVS2vPYiATWPP/naH2DQwQ9+8hwVy29l3/4D9Pf1cLpvmJqKYgBknY6b1t3FZ+5eiZKO8b1n
      nqf+T/8YgPc2beLu+x870ywKTjbvZOfRPp58+mu4bFd2qlCSJD73lT8mMDrEiy9upHFpAx6r
      ld//468xMtDNSy+/xZL6P8N6pvvy5q+ew+ZbQPP+ffT393O8tYul9Tfx17U3AXBs52tsO9jB
      fatrueuBx1m1LsCbr/yGk72NLK3yA6A3GsmkUrPlCDKyrOPmW+/mM3cuJ5uK8v0fvcCDaxew
      9o77uW/1QjLxIP/681f40689fUXKIRke5eUtLdx3n4sjne0E5CjLFxXy9J/8JQBqJsk/ffdZ
      6v7dn81+GA1mF1/8ylPoZYnjO19lx+Fu7rmpem7CQrBrTzNfeOoPKXaZeOHnPycQW4/XNlO3
      lt32IOr+nbz40kZKC12Y7Q7e/c3PMeSX0tK0j/7+AY6d6qRz/yYc/rrLHQQLAhMBhABvYQlV
      fgcToRjjwQh+twuj2Y5FzhBKglOfZDAQmVnSR8ZkkM8sTc8/69rRsoOEcyFf/Mz9GHQzat37
      0Gco9btxOByYTGbMJiNCVclmFXxltQy0NpPOqijZDEbTTMVORcYZiJmoLnQCEJscYNeJUb72
      h1+54pUfIQhMTMyWT6XfxsR0kkAggJAkisoW4LWqRFMCRZkpi5W3fYql1SVnntGE1WpmsK+b
      eCqDEIJYPInFbGZyMoCiChx5XlY2VNE3MoEQM2XhKqxmuP0gWUVlqOMY1oJyvBV1DJ46cE75
      mClZuIzOQ7vJKirZTBqjyXrFikI22Hji8UdxOhzYrBYsNhv6bJyOvmFUIchmUsj6mUqbzcw8
      67IqPzuPnEYIQTKVwWa1zFfIjE6GKHDnYTBZcRgUpiIp1DPuEghB4+rb+MqXniQ6McGqNSto
      vOUeViwqO6eMLay+89M0VBZd7jqAYM+WtzjZMwQCiqsaePDe9Yx0n+KNzTsRAhYsWcW9628i
      GQ2yceNviKUUFt+0nvU3NfDDf/wf3P/Vv0AKnObtHU1MTYzj9PpZsvIWpKkOjnRNYDqzynX7
      /Y9SVz7zhUNJ8PbWZu6/93aat2xkULeAz9y5kv6Oo2zath9JNvDAo49R6nNxbP82rBUrqCnK
      A2CgtZlfbtpLnn2mMOtW3MLtq5b+zi/2XA7tfY+WE12Mj4/j9/tZf89DTHUdorV3GCGgeMFi
      Hrx7HZtff4m+0TACQc2SVdx1y3Ke++7/5NbHv87CIueZ1FTeeXsz991/HxND3bz59lbSWQVP
      STWPPngP7Yf3sufgSYQQODxFfPb3HqSzaRPHwnk8+cCtnD7ezJY9BzHZ3Xz+icewGnX0tR/h
      7e37kXRGHnz0cUq8TjqPN7N17yFkg5nf++zj+PM+mgmBd179NX1jU4yPh/D7PXzmi0/jc8xU
      8OHOwwTkEhqr8nn3zdfpHQ0ghMynH32ccp+Lv/2b/8Jff/ObWCSFN3/7EoOTETxFC3js4Xs4
      uHsLh051MT4ewO/3cfunHiFfCvPq29sQAirqV3L/hlX89iffoWL9EzQW6fnpr15GVVTqVq47
      712/884m7rvv02d/+PDDn0sjm4qJLdt2f+h0tm3ZLFLZj27w9nGgZtNi85ZtHzqdHe9tFomM
      8uEV+hhJhobE9qYTHyoNVcmKdzdvEb9LrdBWgjVuaLSFMI0bGs0ANG5oNAPQuKHRDEDjhmaO
      AQihcurYIVpaWhgJhC7hdsGhQ4eukGoaGleeObNA7Yd2o3jraCj3IASEJsfo6R+hurYes0gS
      V/WMjYzizndiM8kEoioWA/h9PgKjg4yGkjTU1hAITGDWqUxnjZQWuD/O59PQuCBzWoC2/knq
      y72AhCRJqOhYtHAB723ZTGi4nZ88v5GU0LF/zzbeeW8XJpOR5uYW4sEhDp8epyRfz46mo+zZ
      9g5bdh7AZMzt+qChcS0wxwCcJpnImei5Qqg07dtDX/8QieSMn8ktd9zHsroqZL2ZRx59lELv
      zGpreHyQiakg3YMBPHl2DCYnv/foI/jyHVf5cTQ0Lo85BnDrbevY/d6WmTHARAglmyWZSiKQ
      kGQdJtPMF91gMqOXZzyY9Ho9vsoG7CQQSDgdDowWM7prNTyBhsY5aCvBGjc02jSoxg2NZgAa
      NzSaAWjc0GgGoHFDoxnAdUQsNM6+/U0EI4nzriWmx+keDHwMWl3faLNA1xGbN73J7Z96ABEP
      smvPHvI8Xjq7xzGZobLERyZrZiowjDMvn8GBPjbc9whFbvvHrfY1jdYCXEfk2UwMjY7T3XaC
      6XiK4aFhyhYuwazTsajST2BkkJFQkjyHGXdJtVb5LwGtBbiOEKpCf38/Xr+fyckgeU47ssGC
      kklit5lJpATTU6OYHW4Meh0O+0ez3/eTzBUxAEVR0Ol0H3WyGhofOVoXSOOG5rICYwlVobvr
      NC5vEbHgGJLJAYlpfJULCfS14ypZiNM88+UPjwaJT0XmTcfstJJf6v3w2mtofEguywBigX7G
      I1mMliiqzoSajCGpCuMjo4QCo+i91dgMoKoqvc0d9O5vnzedoiXlrPzc+o/kATQ0PgyXZQB6
      k5W8PCOx6PTMgWwCrBYrsakBbK6ZL/r7fX9Zyu0OKkkSev1VP55MQ+M8LqsWmp1+CrMBLI4a
      sskoGCwYdRKK34fBoEPIWqXWuL64vBorSeR7fDP/Nuad/d1onF9eQ+Ma52P/ZB8bjpLIzn/2
      7wK3BZ9d21apceX42A2gazLJdGr+Q4zdVoNmABpXFG0dQOOG5mNvAS6FdDpNR2trzuu1DQ0Y
      DFpLoXH5XBcGEItEeOG5H+e8/h+/8U0MLtdV1Ejjk4LWBdK4oZnXABRFYd++fVdbFw2Nq868
      BiCE4MSJE5oRaHziydkFMhqNdHZ2smnTpqupj4bGVWXeQbBer+eppz6683Q1NK5VcrYAyfA4
      W7Zup7NnACXH0aYaGtc7OadBJZ2BbCpOV0cboXCYVcuXADA5OkBaZyc1PTG7H8BftYiJ3lZc
      JbW4LB/fTrB9vbv57dFfz3utyFnMv7/zP11ljTSudXIagE6vR5ZljI682cqvZJJMTkeRJQWd
      0YySiiMJlfGREUKT4xh8C7EbZ/YDqBfYaSmEIJvNXlQ5VVXJZrMo6vyuEu+jKArZbJZIYpqh
      8MC8MpIkXVKeGjcWOQ0gHugjmDHgy6Zmf0tEI6TTaaLxFE6HCZCwWazEJgex5c14iX6U+wFk
      WUav16OTL9yq6HQ69GcMNmeeaHsQNM5n3hohhEp7/wQuOcF07Gylsuf7WJznIZNRyKTiSAYL
      ellCLfCjN+hA0iqYxvVFjhorsaBmEYP7DtNQXzb3iiRjNMoYjee6HlxffjjDL+8i1jE477X8
      1XV471xxlTXS+LiY1wAkScKkRpmMZ+nt7aV2Uc3V1uuKkglFSY0H572WjZ4fdlDjk0vOTrPe
      WUS1z0pDo/Y11PjkMr8rhKqya+cuyqsW0HryxNXWSUPjqpGjBRCk4mGOHj1GPJ25uhppaFxF
      5h8DyDo+/fBjZNFjMmghDjU+ueQcA6TCo7z429c52d51NfXR0LiqXHBDTElZOe58baeVxieX
      nCtXstHKWP8+lGyKIv8NGMczEYT+XbmvL3oIJG1D3fVOjpVgQW9fP2ZSpJQbdAyQicFwS+7r
      ix66erpoXDHm/4QJQW9fHygpvAXFV1klDY2rR45ZIJn7H/osqpJhZOzswWtCCOKxKEazFTWb
      Bp0BlCxGk5lMOonOYEIn53aC09C41rig95qsM1BSXDT7f5FJMhkME4kMgpoF2QDJEJ6qpYy0
      7qNw8QaKXNeXX5DGjc1luW9KeiOpeITikhJCoRBCyaCzFBCd6MdonjmQTVGUj20/gKrOH2MU
      QHA2zwudCvV+npKicKHRTzab1QbBnwAuywDS0SkiSRVHOoNIx8HkwGYxEZ/O4K6oQjbI18V+
      AOkCur2fJxc540yv12sG8AngsgzA5PSxctmZ8Og+z9kLvhtwmlTjE4H2CdO4odG2cH1I0skE
      meT8ewh0egNmu+Mqa6RxOWgG8CE5uftdDm9+Zd5rxTUN3P9v/gMASjiMyDHwl61WZIvliumo
      kRvNAK4SE//wj6Q7Oue9lvelJ3E+/BBCCKKZ6ZxpWA12dNINujJ/hdAM4Boirab517Z/yHn9
      9xf+KT5LAQwMwP498wuVV8CaWwDofa+VdDw1r1jh8nKcZW7CiQQvHD6QM8+nbr4Fq9HI5NAB
      hk+/Oa+M2V7Iwpu+njONaxnNAK5HshmIzH8IOYmz45FMPEUmOr8BqNmZtRVVqIQS8ZxZiZkD
      cYmGuhhsf3leGYenbtYA3tjbQc/I/Putb6otZt2SMtRQP+kDz+TM03TvNy84Vf1RohmAxkfK
      kdOjNLcNz3vNZTezbkkZIj5J5uT8xgQzBgCgxAdQkvMHOpMNeegdDR9aX80ANK5ZMuGDpEff
      mPeazrH4IzGA33kdIJmIkUxnSCYSCAGpZEILoqtx3fE7tQBCzdLV3QOSHikZxl25hNG2fRRo
      znAa1xm/owGoWO1ORDaDzuInGujDYNYWfDSuP34nA5B0BsgkkIx2bFYzieks7soqZKPmWaFx
      9fnlwWZGpudfP9lQs5CbyspnPIBT54f4+d0MQJKoqqk9+4N3xjFOCIGqqggh0JsNmF3Wee83
      WkyzrssWg0RWnX/KSy/NuCcjSbjy8i6g0IycSW/GY53fMS/Pkjebp85mRp9nmz8ps/GMnAxG
      Z+48VQGSisFkxupyzytisjlm85SdLmSPZ145zOYZOSGw63PnKSPNyOl0YJ1ff0wmeP85zQb0
      Sg4XcZ08q5vDZMqZJ2KmbGW9FZOtcF4Ro8Uzm5bTasTrmn9V22rSz9QP2QD2+dOCmXokhADZ
      Avr5yxbd2bLtGB+ne3JiXrGGgsIZOUUle+j8CCeSuJBz/GXyvuKqql7QNRm4JJmPWk4IcUnz
      yx+HbtdqWpcqd72W7UdqAO9zbmEk4xHGJqYAsDvz8eQ7z5M5cxeJWJSJyTCl5aWz01Nz5IRg
      cmKUcCxFcUkpZuPZBmz+F5BlOpzC6bLNysDc/QDpVILR0QmKykoxnCmkuWkJotEYwcAYOouL
      ogIvs1fOkcukEgjZiEEvEYslsNvnz3MqMI7V6SYVmUK2uHBYTfPmOTYygt3lxmY15yxbVc0y
      NTmFKsDmcGGzzJeWyujwKM58D1aLKWdaCEFgYpTpWApPfj5mux2TXneenJJJ0dvTg6q3sKCy
      fHYL7Aefczo8PbPvQwKd1YZRN3/ZRiJRsqk4SWGgyHf2az83zzTT0RihUIiCwuLZ55jvfSrZ
      NGOjY7i8hdjMhnnzjMXi2Gw2YpHIlXGHPlcho8mK1WQgGo0inbOxZW5lVTjUtJ+O9nYw2uco
      da5cYnqSqbigrKSQ7q65zdm5cvFImL6+Pvr6ehgZC86ROVeu9dghOro7icbEbOU/X7cMA/39
      xJMSUxNjOfPU6fWcbj1GU8thkPVzZM6Vs1qtHD2wl/7JCBaTYd60QMLj8RAYHWD33gOc60J3
      rtzMJh+JwYFR5HP2Ys9NS8bjcTM21Mu+pkMoOdJKhCcIJaC0uJC29g70OcpjoLcHf7GfdCxC
      T/94zuccHOint7uHkYEB4ud0w+bqlmJocJyBkQDTkxOc+yU+Vy4Vm6a98zSjoxOoYm5a58r1
      dpzi2Kl2AsHYbOU/P09IRoPs3bOHsVD0yu8HmA6M0NEziNFoRIhcWxZ1LF2xArfbTXx6ilxS
      RquNVHSK7p5erPbcfWWD0UA8FiWWEFRWFeWUW9SwFF9ePqoSJ5NzO6URT56DZDKM21+ElEMq
      GYtizS+kbkEZ0VgsZ55KNktZVTUeh5Vsrv45gtGRYYTezMqVy3MO1FQ1y2Rgimw2TSKZziXF
      0MAAssnGiuVLc27zNFodJCOT9PT2UlhSljO4QUFRESPDASoWVFFcmKN/DhT43CCDMNux63Pl
      asZpk6mqrsFim3+8CGDN87JqxTL8BX7s1txesxU1tZQV+pDJEkvmimkrmJgMs3TZMqRM6sob
      gMlqp8DnxuHKw27LpbwgEg4RjUZJZ3Pv65V1RqxmIwA2e45BIDA8MEB5TR0LK3wMDM0/OAKY
      GBshNB1H1uuQclbtNMMjAVIZlamJMXL1Fw0mE0o6RiSRxXaBl5ROp4jFYnR3tBGJ5660GUUH
      ikJ4eIhkDilZZ0CWJVx5ToxGYw4pCaPJiJLNEo1Gc+qvKBmEkJAkGYMh99zI2EgAt91KWtJj
      Nede85kITCKrKqFwkGzOBdIsoXCM9oPNyPbcEQjDw31MpeJMDE/Q1tmbUy44OcFA7wCyKVdZ
      AEj4fV7GRkdJpNJX3gB0egMGg4GpiTGCoWgOKcHkZBAlm8FgMuesiolwAJ3dS+2iWgKj8/ub
      ANjtDob6uukdHMdhM+eU8/gLqaysxCwpJLO5Nt6rqAqgKmQvYJyqkiWrCCwWMzpd7mJVlSzR
      eJwFtUvId+TSTSI2PcX4+DijU6HcphkLIQwuFlaXMzQ4kkNKkMlkMBhNGC6wD1tvtODOd2Iw
      6FGU3EEI7A4z48EQY/29hC9wmIjT6QCjhYqyEnQ5x8YyHk8+BrOZRDR3q2kwmxkfmaK0zIte
      n9vo7M48bEYj3qKiCwZ1TsTjCCHIy8+/MoPgc0nGI4yOT5JOJnC4Cyny5+eUFUIQjUSxOR3z
      WqZQFbpPnyYrBG5fET73h4tbOjkxSiyRweZw4s5z8WEcEC91FiQSDhKNJwGJfI93zkD+8vNU
      6ek6TUYRFJdX4rDMN50pEOLCgQAAsqkYrW2nQdZRUFyK33OBaecrgJhRMoexC5KJOKmswOmw
      5/wgRKdDTEfjSJKM2+vFNG9LNrc8rrgBxCMhhsYCWCw2vF4vZpPmKnEtomRSjAdmZuvMVjv5
      rhtjZf+KG4CGxrWM5rugcUOjGYDGDY1mABo3NJoBaNzQaAagcUOjGYDGDc15BpCMRxkcGr6A
      n8q5CMLh8EWlYpEQ/f39hKbnX+3rH+i/hLxgOjRJf38/U+EcIUE0NC6TOQYwPdHPzgPH0UmC
      qVDuCGXnEpgIXFRm/9bNpHQmetsO03z8/Ohox48fv6S8dry7Gclspvt4E6294xe/4SIc3ruT
      qYR2EPiNzJy14n1NR7jjgYcxnfEE7O44xVQ4QiyjY3Ghjm3HRxCSAbdNQsSCOCuWEw0MUFlR
      xPYdezEZZQoqF9PffoREeJLSpbeyvLYCZBmvr4CFxX5ee/11IkVWDhzvgkyC5evuOJO7yqmj
      R4nEo+hshQSH2rn1ngfoO7oHW+VKyr02ZFmPz+/Hma3g6MgUPcd2EAhEuPP++2hv7UBPhprG
      tQR6jpMUBvzFZYSHu0mjJ6XqqS/Qs7stRJE9g6mghtMd7QQxsaSugemxXoKROCmMrFhYyK7m
      U3hsoDoW4BQBwklBNJHh7g3rrlrQJo0rz5wWIJ0V6M/Z4BCLRUHS09vbjZJJITsKeeKRe4kH
      x2m45V7WLFtIMpkk0HOCsZjAbLbQ0d5OeGKMVXc/MlP5z0WaSffYwWYkkxWTQSptGfEAACAA
      SURBVKGja2gmP1UllkigM+rpOd3FsvpKWo510D0aptQz4/mZScc43HKQ1oEQqxsXMjY+yRNf
      eYrp/jaSkgGb2UBrRwdDgShr16xmQZmPo8dPodfrGerrIZVNU1FTz9qVixkenaK8soLG5Svw
      u+3EYnEkWUdfTxctLUe4dcMGGhdVEElmOHz0GHq9jpHBfjJa6JdPFHMMYGVDOXsPtaNkM0Sj
      MboHxlhSvwi9TgJJpqK8DACd1UWJ76yzlC3PS74rnxUrb+KWm5dhdnkoyLd/ICvB2MBpnL5S
      vF43noJSVq25jcU1M6dQJqfHmEoaWLSgAkkCX0U9oyd3YnGX8r5rusFoY8XNN7F2zSrMBh3+
      4jLMBh35bg95bj/Lb17LqqW1yCJDKpMlFk+R5/awdNlyPnXPHed5JdpMRiLxFKoSo3domoba
      GnQSeFw2hsdDRKanEQKcrnwaljTy6fvvxaAdAviJQveNb3zjG+//x+EuxKhG6OoZJN/rx2M3
      MjIVoaZ6AR6vH5vdjtWkx2az43TMOEvZbTY8hWVYpAQ9/SN4fH48+Xk4nGedqcxmI309vWBy
      sHJpHd7CMqbH+xmbiuL3+3A5neR7ixDJELGMTFV5GS6Xk/GhQRrXrMNqnHFttdntuFyuWau1
      22w4HE4c7gKUaICB0Ul8vgKqyotpbW3HZHdRV11Oa2sbBqsTj8eD3e7AYjZjs9tZULOAwc42
      THY/+XZBIJyiekElNXX1TAx2EQkHSZu8bFi9mLbWVtBbyHc5tC7QJ4hr1hkuODFC31iYZUvq
      crq/XimiwQlaT/eSySqsvHk1ZoM2W/xJ5Zo1AA2Nq4H2adO4ofnIDGA2mJGGxnXERQ2gs7Pj
      khPTDEDjeuOiG1LT6VyRCzSuRdqPH2Y4FGf5klqOHjlOw4rV+J0mmpuaSMkWzMo0+aWLyKbS
      6KxOqovzkSSJvTveQ+cqxEGCsWiGdWvXkAqPceDwSYqLixkYHGFFYx2qyUXheVPc1y85DSAV
      CZAxefF4tEOwryfS2RRKMsmJphZSJjPBUBh/XjFul5324SlUkvTt3UlvKMv2HonVDWUoqooI
      dnHXagcGU4ZsIkVWUUnGIsSTKUYHBkgm0+zYsx+3rwTfbWsvEOnh+iJnF+jIvq28+sYmTnb2
      XU19ND4k+XleLHoVyWLDarERnpwgMj1NSuhIJpMsWbqY8spK8hwG7mgs4S8eX0NjtY9Y1kJs
      Kkie24dBTROYmmYqNIW3oAjJns+iigKKC/2kk3GUeXq6oeAUWVVloLebeGomll1vVzvtp7uJ
      hCaZjqVIJBI54xJdClOTk6hCpa+7i9SZEDWJaIjB0QnCUxPEkhniidyhWuYj5zRoKjzKph0t
      OPJ93H3bmosm9P4g+FICmmpcOTKpJJF4ivw8J+FQEIOsMp0xYJGz6M02LEYdyDpe3XYUtzuf
      O1ZUIoTgmVf2Ulni547GEmKpLInpIJ7CUqLTQZx5boSSRa+TicZTOB1zg5Ip6Si/eO7XrL/9
      ZgYjEtlYlLvvWMdUYIwDLUfIc9pRshmSWYnbNtyOUSeRnA7wi1e2csuSCkYD45TUrqeu1Myu
      XQfI6HSkp4YpqmjA7PJQW1VEJhHi2Wc38sCnVjCYtJCJxNlw6wrefPUVyhY1kgiOkM0opDFy
      ++3rZl16LkbO2ppJTpOVTOc9rMa1jcFkxp3vQpIk8vLd2Fxeirwu8twe7FYzOr0BnSwzMp2h
      umQmRpMkSTx53yp2HB0gLfTku5wUl1VgMujweLwYdDJGo5GsKjEZPX9M2LJ3D2k1Q89omOjU
      GGbzTMAvi06hoGIRbpeViekkMgmOHz8FwOb3tmGSFSLJNMlkEp1eBp2FPJsBFR06nY6OE4c4
      1NzEdBb27NiJIE3/RILpiWGsVjOoCorOxOjwAHabicnpOCgRWjt6L7m85rhCnIusN9DW0UVF
      aREeT+4YkB9EcxO49hFC8Nb+09y3ugb9mSh2RoMOk0HHruP9LK8pmPc9bjnYw/dfbeGWxaXY
      LGfDD5ZW1lBa6Ke4yE9wMojb52FqKkwmk6W6ugqfJw+LLZ9sfIqiynqcNhN+v38mSrPVhJBk
      TBJkVcHgyBjoDaxYXIPbV8BYIMyiukUsWlRLgddLWZmPiUAQryefqXASp0lFGBwsX1yLPd9P
      PBygvLpuTnDcixXGvERHO8T3f/KCeP3Nt3OJzEFVVaEoyiXJany8ROIp8bc/3SFUVZ3zu6Ko
      4r//bKfoHwudd086kxX/9zPviUMdw+L/+/kukc3mfteqmhWZC1yfj+lwUGQU9eKC7+ehZEUm
      e+ny59wpjhw6JLJCiP7Tp0TOLpDe4mDD+vVUV1dd5vdF41pnOBCh2Hu+U58sS3zuzgZe2nbq
      vDWdfScHaawuYHlNIVVFebzT3EU6q7D/1CB/86NtJM45fkiSdLMty3yc7J1g38nBOXk4nHmX
      3G+fyURm2+EeXtx28tLvASaGujlxqo9EIsyp1tYLLYRJdLafYnDkw++80ri26Bqaorp4/hit
      NSVudDqZtv6zO/0URWVLSzf3rapGkiQ+u6GeplODfPO5HRw9PXNmwtsHui66ECqE4FDHCN9/
      pZmXLrPinst0LMVzm46y9VAPO4/2EY6ejZ+dVVRC0VzxtOF0Vy/R4DBN+w8SS8RyzwIp6Tjv
      7TrA0vpaiopzx9h/H3GBWaB4eIz+QBarmCaUMdJYX81QbwftXX2UVVUTDMepryxEtuZjM82N
      6tt6aAdDCQ+F+lGi9hrWLq5kbKCHEydPIJldTMdSLKwoZEHtYiwX8NpUUlFOnB6mOM9Ez9g0
      N69YihKfYkfTEerqGhgYGGTF4hpiwownZ9TmTwbf/e0BHl1fR6n/7BkLe7e9Q83ym2ne3YS9
      eAE7T4zz2HIbw5NREqk0J4bSPHFnHQuqq5GAdEZBliX0OpmsovK9lw+wuNLP3TdVzTt+EELw
      vZebkSSJL969hJ+9c5RPraqmodJ3STp3Dk6yubmbyekEmazCA2sXsqq+mFO9AV7f287/+cVb
      icRTfP/VFiaCMf78sTUsyGHkU4FJXF4PSiKSeyEsGRqma2CYVCrFw5dgALkQQuHo8VNkdU4M
      QsWIQpJqSioXEY9GCI2MkVBUdh7op6p6CQ015bP3RgODnOgaQTWqbLijgcNDKQDcXi8Gi5MC
      Xz5Tpzo51RFmIpzgjltX59Tj6NETTMUVkmEdHpuJyVgKZWSIWFolMTZMMpFky579+AsrcC+r
      v+ou2JeKqmQ42LwfZ0EVuuQkcew01lfT3X6coUCC6go/kbSefJsBX0HBec8hhCAQjuPLO3sg
      RWC4h3hGJhqOgV7CaZKRZYnvv91GdHyQlNBx77Jijh07AkYH1WV+jOeEH9frZL7+e6v41kv7
      sFuNrG0oPU/v7uEgqhD8+WdWzcw63bOU7758gG989Y45p9vMRzqj8OO3jvBHD66gyOPAbNTP
      3rOkykfvSJBvb2wiEI7z5L1L8efZ+PZvmvjiPUtZPI+Bub0eFFVlMn6BWSA1m0aRLNyy5maM
      Fzgw4YN80PoToTGOt3XRMxzA73IiCZXCijJ0SpqO3lFWrlxMR1sbOrMdvZqipKRk9l7ZYKLQ
      l08yIxEa6aKtfxyX1Ur7ycPEMhLV9Y1YjTryHWYUyUh5SRGDE9P86+sHWV1fMltIajpKy+ET
      dPUN4HPnYdLL2H0F2O12aipLOdnTi5yOklZ1WPQSRcVnd6F9WFLRKXbv3U80qXDqcDOjoQSl
      xQWcPNJEa0c/mVSEjt5R0oko+W73xQ1PkkinEgz0DxFLSWQD45TVLOBoSzMmp5toJEJkcpjT
      XV04PUU4PnDGWDSRpqV9mDtWVM6+q4nREU63t5IyOCl0O5kMhKipLMImJ1lc7uDffPkz6PV6
      9CKBkM0UF55fqXQ6mZULi/jJW0coK3Dhds49JOTlXW3c1lg+u1PQZjEyNBEhHEtRUZg7FLsQ
      gpd3tlJb7mVVfQkGvW7uMVGSxMJSD8Foks/ftZiKwjxsFiMrFxXx4zcPE4olqSzMmx2TCCHo
      Hg7yL6+0cLRrLHcXKDzWy+vv7aOobMGHXwgTCoGpCEp8ilDGgBIPU11TRTIj43JYmJycRC/S
      BOJQXX7h1iYUCpGX48jU4UCE7758AIfVxINrF9JYXTDneiAwiYE0vWMRbDoFX0kxp46fYvGK
      m8jEI9hMOrqHp6hftOAjawGEEDTt3IzkKGKkuw1zfgH33307Rw/sZTwUx2q3EgwEyChZapfc
      RMPCigumpyoZAhOTHD52kqpiNy2HOnjy9z9POBymv+0gel81PR2d5OdZMOgt3Hzzyjn3tw8E
      2Ht8gKcfWDHnd0XJgiQTnQ5jsZoZGQ3i8zjIqDJOu4WsIsikEhjN1gsOcCdCMf7xxf382WdX
      U+yxI0kSmazCf/nxdv7bH9455/CQWDLDN5/bzn/56gZs5vlPdRmbivK9l5v5r09vQHeZi6zp
      jMJ7h3p490AXVrOBEq+DYDSJQS/z5D1LKfE65jcAoSpsevNVhNHFg/fdfc4FQSg4idXpxqiX
      QQgi0RgOh/2yVoKFECRSWSwmw4c6lGJqOsHG7aco9TvJZFX2nRzg3z66ClUIXtnVxl88vuaC
      6xLiEg+1OOcOWvbtZCSsUu41EVHM3Lp6BZIEm57/JwqXPUJb60lWNtbgLV2Ix2YgFgrQ2dfP
      xOgI8aQevVHH7evXMjk2SN/pdqpW38NA+3HUdASD1cvaVSsuqIGqpDnU0oKnpAYlMorO4SUW
      nsZt1zM2rbB8cTVT4RixqRGs3nK8HzireeOOU3icFu5cceVm91rahvm7X+7h7752DwuK82lu
      G6ZzcJIn71l6nmxz6xC7jw/w7z539l1tO9RDic+Jyajjhc0nePyOBhaWXvpa1Ac52TtBe3+A
      1fUl2C1GnFbTbO9g/i6QEBw71MRUMMRoMM7Cqpl+eSY2yUAgQSgYwOtxE5wY4cTpfspLzn61
      L6VCDYxP8xffeZulC/x4chymfTEi8TTfemk/q+tLMBp07Djayy2Ly1hdX4LLZmJzczeNNQVz
      TmI8l0A4zl9+5x0WV/nJd+Q+02suEslYmLFgnNDoEKlYjMKaOvqO7qZ/dBxh8ZOKTjEyMc7k
      xBQLF1RiMJowmczU1i+loqyABTULCEwEKCkpwVNShd9lpaiwiOKiEoqLSy54vBKAJOsoLi0j
      32nD7Ssg3+nA7/fiyHPPHOEqyVgtZlxuL5msgl4nz77sUDTJP764j5oSD3XlV87J0ZtnxW42
      8Ob+TlYsLOTlXW08tK4Wp/X8E2yKvQ46BicZnYpRXZLPoY4R/mljE8FIgqFAlIZKH6vrS+bJ
      5dLx59mor/DhtJkwG/Vzu1C5ukDzkZgaYErykwwOsqCqipYDTUzHkqxbfxtG3cwp5hczACHg
      X18/iNlk5PTQJF+9b9nskvz7ZBUVIcCgn78yJNNZvvVSE59eU8Pymplujnrma/5+7juP9hOK
      JXlk3SIA0lkF4zmnFb6xr5Nj3eOoqspffm7tJa4cZtm/cy/hrITfITM2EWPR4gYK/PlMdDSR
      KlyHHOxGFQpDgRh33bY2p/4ToThl/gucRH8ZCAF7Tw5wc23x7NlYyXSWP//2O6yqLeJL9y5F
      VQX/vLGJO1dWsaquaE5ZXA6BQACv10s4HMblmjmiamSgF0t+AelIkPyCIjKpJFaLhY7BKZ7b
      dASQ+O9/dGfO1j6rqPyP5/fgc1lJZhSevn8ZTrvpd+6G7npnI46q9WQmOwkmdHzqrnXs3fke
      0+EIdl8R6bSKN89OY+PS3IPgZHic7XubCUdieDxedLKE3mRjpK8Tp7sAoWapWlCN3WYnz+mY
      PbNVp9Mhy3LOv62He4glM/zBAytYVlPIjzYdwWTQU1GYh06nI5HO8q2X9rPzWD+NNYXYrSZk
      WT5jWBLHeyb48VtHuOumBaxtKJ3NT6fToTsnnwK3nZe2t7JheSWnegP8P89ux5dno7Ion/7x
      ad5t7uY/f3k9eXYzP3v3OKvqSrCYjBfUXZb1lFdVsai6ipKyShbVLkSnk3A5nHiKa/A7jfj8
      BfgLiqiuKs+ZzqamLv5pYxMP31qLyWi4SJ7n/6UyCkaDHp1uZkC4qamL7Yf76BoOsqq+BJ0s
      88rudgrddioK8vj11pNsPdzLE3cuYU1DCcnwKIOTKSLjfYyGkhT6PIQmRjh0oh2308Kp04PY
      TTKy2YZRf/Z9To8P8Oo7e1lY5efdnftpbKhHSk2y59gg48OniYWn6OnqZzKSpKKsCH++nel4
      inRGZX1jec66odfrWFLlJ6OofOneRmwWI13H9zCecjJ8YjsZ1wLcdgOB4V6OnRpAzoRp7Rkl
      m4rj8XrnvPfB9iN0DI6h6N2UeozY8/0U+j0M9JxmOp7F7XUzOTZKMBQgkZFzG0A2k6CrpxdJ
      1hEMT1NU4EeSZLw+P3arGZNppjmz2eY6y+VqAYQQ/GZHK/tPDvHnj61Gr9NhMxtZ21DCW/s7
      6RycorzAxT9vbOLeVdWsqi3mB6+14MuzEYomeX7LcZ554xAGvY4n71lKQ6X3gq2NQa+jezjI
      xu2nmI6nua2xgvb+Sd472M3ek4P820dvxmU3U+x1kGcz84PXDuKwmGYGRpcxLtDpDby2p53y
      AtclfVWFELy8q411S8p4+8BpVtdfvNvzPrFkmld2tfGzt4/S2hegtsxDIBxn+5Fe/uOX19M/
      Ns2xrnHC0SSdQ0H++JGbWFTm4bbGctbUl1JVnA8iy+FDzUQSgmRcQY1H8JWVcuzIYRYVO9m8
      5wRWI3R2n0ZntOHNP9tKbXn3HSYnJ1m0fA3ZZJjy0nIyyQidp/vQWZw4DFkmJyZQkbD4S3Ca
      9NRXeFm7uPSiY0Ob2Uh1iRtJkkiEJxgaGyGWcVFboDIqfBQ6DZisdkZ6BlHUJGMjw4yMjqDI
      Zvzesz0Is8OF12lCETLHDh/F4y8im04Qi84cmF6/4hbMRh0WOYvJ7rmAASSC7D14Cklv4s71
      8zfl83GhytPcNsyy6gIWlXlmfzPoddxcV0zfaJgfvNrC5+9azKraYrx5NpbVFPLyzjbGQ3EW
      FLtZ21DCI7fW4rCaLpjPyEAvkZRKQ6mdMq+Nh29bTE1JPh59jLqFFeQbMixbWEw8rWLU6yj0
      2FlVV8zWw71sbummsijvTB4XflZFVfnV1pO8ua+Tkz0TuOxmLEYDh0+P8PKuNtr6AwwHZgL5
      epwzY51TfTO/Pf3p5WSVmcF6fYUPs1GX85mm4yne2n+aX289yZIqP3/w4AqcVhPPvHGIA61D
      /PUX1mExGqiv8PLang52HOnjb566fXb6WifLs2Oh8Nggbd199I+GcTusCJGluKIch1FH04EW
      FixdQWB4ELMzD9LxOdPSi+qX4Pf6MEsJTp7qQFKzJLGSjITJ8/hYWFlGafUixscnqVu4AL08
      0yvoaT/OgZYToCY5fPgwJmchNjnO1u17iCQVTh9rQjI7CUxO485zEJqcoL+vk4Ggij7aT1/M
      REm+mfDUGAdbjrJ2wwYi0RhWo0RGkSg7Zwyq1xtw5vspKfTRuKyRQn8+SDI1C+uorlmEzaTH
      7/NRWr6AQp879xggMdnH3hODJNIZHrr3jgvXBD78fgAhBMl0FrPRgJJJ0NnVR3l5Cd2nu7G7
      /VSVFRGPBAnGFfItMglhxGKQsVitH+grCsZGhjh48CQmi4xZlqhddTtWJUogPM3R/U0Y87xY
      7Wa8RZXUV5XM0aF7JMjz7x5nYambR2+rm3cQnc4q9I2GeHHbKeorvDx4y0LC0RRv7utkKDBN
      Q6WPJVV+hBCMB2PsOTFAmd/F5+5o4P9/fjdfe+QmCtwzM2e7jvWz+1g/iXSWYo+DJ+5ajOfM
      HPp0LMVvd7bSPRzkjhWV3LqkDNM5x6omUhmCkSTF3rNByE4PTjEeirFuSVnuwlYzTIYSpCJj
      JCQHqekAhQVuekfCLF9aRzAYRMrEiSgmKopzr9QqinJO9zQ3oYkh3t7aRF11EcMjw1Qvv5sy
      wzg7O8KkIiNYRYbJyTgGdwEPPHgvFllCCIWsArFIGGQ94VAQn9dDMpXG4XQBApHNgN74O49n
      IMcgWAiVXe+9TTQNZqeXu9bnXmE9e4/g1NFmWk+PsbihjPHJGKvWrIXEFE0thwjFssjZOFU1
      dTi8xVQVe3KmFY+EGR8bYGASGirzOH56hDtuXcXOndsxSIKUZEavZkhnMqy9bQPWD5y1O9Dd
      xvH2QewWiWgkzuo77sWlT7On6SgrVyxm987dxDIKPq+PW9ev54MeFIqisv1IH9sO92A1GRCA
      12Ulq6hMnVmKL/Y6uHNFJYvKPBetAIqq8nbTad4+0EVlYR5/9flbziu7rKLS2hfg11tPsrq+
      GEmSaDo1yMPrarm5rnjeuXdxZndUUXkVg10d6J1eKor9RMOTBKbTFOSZiWX1WE26eT4UV4+e
      zlbaT7Si2JwU5JnA4Ke2ppjjRw+RkazUljoZGR6jczjE3Q8/jMd49TTNYQCCRGSKzbtaaGyo
      paqq8qIJCSEYHehiZ9NJnEYwWY2U199MTamPrpOHsPgqOLJ/B9FYAsns4sFHHsKaw3DVbJp9
      e3dh81RgUUJ4FyzFYzdxoPkAHqtMMGtksH8Qp8OI0+Hj5puWnXN3lpa9+0nKFjw2iZFAlOJC
      H3o9dPWOsKh+MQaRxGSQ6egPsG7VipxdHVUVROIzX+Eyv4u6Ci/5djMWk+Giy/fzlc+L205S
      4nWyvrE8p1wyneVvf7oDnU7mP31pfc5p3JlyyjA40ENP/wR9A/3cc/+nKfbmsWXzu5glhbQ5
      H6OaJpPJsHr97dg+pjOaU4k4KUVgt5iIROOoqQiS3Y+ciWNzOBGqgk6nIx6PY7Var+qeknl9
      HCRJQiSDDI8FkBCXZAAAY2NTOCxGSisLGR0JoMZDTEYcRDN6qv0epGWNxFMZTnQOXtDVIBQY
      J6PKM9NsGR1uq47Wtk7cdhMj01nW3VyHz+0lNNZDXvEHm3o9N69bP/u/es401TodNQvr50j6
      Ci/QTWDGPdhlN5+3avq7IEkSn79ryUXlzEY9f/PUBiSY092ZVz+9gdh0EEe+h0eW1tHccoTi
      T92BSacQTqiUFNjo7ZnE4TBz6vhJVt28/EM/x++CyWLl/RUAl8sJvD+wnplGRZ55zg9OqFwN
      crYAfV2tHDpyitplq1h8keX59+/54BggMh3G5nAif0iLFkJFVbnk2ZIPQ1fbMfa3tHLbhjUc
      O3iAmuV3U1dmY8/uJiIKEBnFX9FAMBzjrtvXkImH2bV3H3p7CRY1wNCUymcevof+060cOnSE
      /NIqkokMNjnFktXrybN9wDcnOMHxjh4WNyyhp+MEBeW1+N02mvfvJqqYqCpwYskvRiJLoX9u
      fzybjrF/7wH8ZRWMD/TjKizD/r/bu5ffNo47gOPf5e5SpChSfIjU25ItS7YT201ix0kap2nR
      W1HAxxzbv6p/QAu0pwLtoQlQtECTHBqkaFG7dmxJth58v8QVd5fkktxHD45tORYt2SL1sOZz
      EkbkzHDJ33JnhvubIZlmvUKl3ubDj25QKlXQK2nC44vMT4sMHz+06ynGcx3uL6/y9pUrPFpb
      3lcA7ObxYOXgJMmH/PrjnFeSSIwRDQcIRWKMREbxbAt8UWTJ5d13rrN5759kH9xGjU5Ssjwm
      QlFGR0I4fkgMJ6i1Hm8ZpSoqU0tXmU0E+Obfd5EiEVbu/Y8bN95/rr2hIZVKbgN94TIjw0No
      dZ2J5CjXrl/nP3cfkctmqdy+B/4hfvyTnzMRf5aTR/GHuPnTnwGwtHBuR63zT/+am52G2YOt
      pL7Jdr8E8smcX1ig3e2ycH7psPt0pIrFIoFwDKNWAZ+Kr7tNOmNTqLcZLpVYXHqLpavX+fZf
      d0kMSTS1CmbHZSIZopTNEI0luH//PuZ2hWbbI3zpJu+9p9LSq/hC4y+0V6nWSCbjLH/7Dypd
      H59+OINumKSX73LxyvvIrUm+e5ilXNigrhvPBYBwcL3TouhlylZg38v1B50GPa72O9X3hOd5
      uK6LvM+vLLvbptnqMBwcwmw0USQb3ZJJJcIoioLnOrhIdCyLoWDwwJeTwvN6BoBVL/H7P37B
      3OIlkRdIeGP1/LRKEvgjcWbHe9+sIAgn3UtO1x6dRp3Vjfzh9UYQDtmuAeB5LquP1knFowSC
      w8+Vrz9cpvb9htflQpbVtc0D5XsUhKPUY6VFYn52hraa4vLSs1XLdr2AEp2hVi4SjywQS6So
      raxiex4+1xWbZAgnTs+VYEUdYn35W7a16tNBsORTsDttXNcFPHLpdabOLqAA3vezE2IQLJwk
      PdfaXdtiODrJlUuLT8v84RRD9TSpM3MYhoksK5TyBUKLZ59eS4ncoMJJ0nMatNOo8dvf/QEl
      NsOvP7u1Z0ViGlQ4iXonxqrlUJMLnJvoz32rgnAc7X669jykyAy/+PhH+IPhXR8iCG+CntOg
      95ZXSI5P4LXNw+6TIByaXQNAknzEAjJ/+fxzIqkX8zwKwptiz7xAjuPs64ddYhAsnER7flpX
      VpYPox+CcCR6zgI1Sqv8+esHdMwtdMvjg3ffPsx+CcKh6BkAaijKSEBBjc4TCx3NzdSCMGi9
      V4JdicCQSiKVYmnpdN0VJpwevccAEuC5NJvPdt72PJe11WVq9cdTo9VijvWM+Lm0cHL1WAfw
      qGl17JaO0bKflre3C6ixWWrVEuCybbaR203ah9VbQeizHivBLl9/9SUtY4v5pWeDX0lW6LZb
      OI4LgGPbdG1n76kkQTimeq4DeJ5Hu2mwsp7j6uVLT8uKuQyjyUmcjoXP7WJ0JSbGYmIdQDiR
      XmmDjF6eZELYueXQbtsP7fb//Za9Tj2v8px+9XG/dffrtfSj7qN43/pRdz+OU18CYGflwHOd
      21m2c1X5dV7sD+t+lee8rO2D1r1X2ZM0KYfV3lEe7ydlT9reb7/7+b7sB4rQzAAABDFJREFU
      53g/LetnAOxlt4h809veefCPom1xvF9uoBfsdscik83jei6FfB7XA6tp0rUdculNNjazuANq
      29jeolqr07WalKo1JEnCMAzg8Tim1bH3rON1eJ5HIfc43//2VoWG1QHPwWy0cDoWuUJ5IO0C
      NHSNUlXD7lgUy1XwXHKZDB3bZatcHNhrBtC1KlVNp2M1KFc1PNcmnc7guB6maTCo86zneeSz
      GayOjbZVptnu0mroFMtbON026UwO9yVND/QbQK9rWKZGqdokMTVOQ2/R1fMkF68RC8DDh2tc
      uHhhIHnra7UtioUisiwTUGWGo3HWNtJcOTtOzpRom3Uuv3Wx7+12rQaNjkM+m8HnGwIc4qMh
      qoaF4jkkIipNOcVsqv8pDrVajWK+gE+VCQf9eP4wIwFIp0sMR6J02y0uXljcu6LXsPN4+30S
      I2NJ/F6Lcl2iWk5z/f0PUOX+v9OdVoNW1yabyaCow3iuzfj4GKVcgdTsFG5zm7aSZDq5+/Ee
      6DeAZ3fRuyqJSJBoLIpPgsmJFCBht3SGR8cGtmmDWa8xNjmDoqqMBAMowRFikRAuCi1DQ/W/
      uGVnPyiKTC6T5dz5Ofz+EKqqkByfRJUlxuIRStUtOp3uQNpuGttEx6cebxM0EsJ1HPJFjbmZ
      FMOhSM9dN/vB0LZITp1BUVVCgQCu51CotVk4O8l4qvdmKAclKz6ymTxnz80SCIygqjJWQyec
      HEdxumiWzNRY77TrAw0AwzBw2i3CY0k2V1ZIJOOUtnS0aolm22N64vU3P345h4bZwtR1opFh
      qo0uSqdBw2zQtMEv+wiHB3OrZ1Ov4/lkdMNG9gwCoQjFXAbTMHFR8A3FmJ8eRLY9F7PRpKHr
      JKJhMhWDoOzg4WH7AjS1PCOjg/ogOpgNC0OvMzoSROu4eFYT3C7bmoahm5TK1YG03NTr4PPR
      aHm4HY3gyCim0aCpG2wbJm7Hotnufel3qINgQThuxKqVcKqJABBONREAx4jTaZIpVHDaDdK5
      Uo9HedQ07YVSrVJgq96gUszw4OE64sJ2f8QY4Bhp5B7wm8/vcOv6DF89KPPJ1bO0fcPIdgOz
      2aVbz2CNLrK1doezS5e5ce0qK/duI4fG+PsXf+LWZ7/i9jdfcuXKEstZk3jQxR+K8dXf/sov
      b90ivbnJ0tvvEP9+H2LhJTfECEdBYnzEz4bhEVU6rOVq+JwcbRcSflDCcebn57C2slRKWbAX
      eZTV8NwC02fOMR4PAxKxsTHMO2s4ARUtU2b6zBylh3fY7gapanURADuIADhG1HCcmx9fw9Rb
      TI/FkewWbd8kw6qPoAyhWJSNfJ7F8wuAB3KQ+ckI6ugFHOvxTUqzMxP89/YqNz/5iPv3viMx
      MY3faRKJJTDTeWKRw9+K9DgTl0DCqSYGwcKpJgJAONVEAAinmggA4VT7PxP69bZAHCk+AAAA
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
